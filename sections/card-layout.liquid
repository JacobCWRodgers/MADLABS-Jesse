{% schema %}
{
  "name": "Cards Carousel",
  "settings": [],
  "blocks": [
    {
      "type": "card",
      "name": "Card",
      "limit": 10,
      "settings": [
        {
          "type": "image_picker",
          "id": "background_image",
          "label": "Background Image"
        },
        {
          "type": "text",
          "id": "text",
          "label": "Card Text",
          "default": "More Physical Energy"
        },
        {
          "type": "image_picker",
          "id": "icon",
          "label": "Icon Image"
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "Cards Carousel",
      "category": "Custom",
      "blocks": [
        { "type": "card" },
        { "type": "card" },
        { "type": "card" }
      ]
    }
  ]
}
{% endschema %}

<style>
          /* Grid and Carousel Styles */


  .mobile_text {
    margin: 0;
  }
  .cards-container {
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    gap: 20px;
  }

  .carousel {
    display: none;
    overflow: hidden;
    white-space: nowrap;
    position: relative;
    -webkit-overflow-scrolling: touch;
    scroll-behavior: smooth;
    padding: 5vh 10px;
  }

  .carousel-inner {
    padding-right: 20px;
    scrollbar-width: none; /* Firefox */
    -ms-overflow-style: none; /* IE and Edge */
    overflow-x: scroll;
    scroll-behavior: smooth;
  }

  .carousel .card {
    display: inline-block;
    width: calc(100% - 20px);
    margin: 0 15px 0 6px;
    vertical-align: top;
    min-height: 400px;
  }

  /* Responsive Design */

  @media (max-width: 768px) {
    .cards-container {
      display: none;
    }
    .carousel {
      display: block;
    }
  }

  /* Card Styles */

  .card {
    color: #6F1645;
    position: relative;
    font-weight: 700;
    line-height: 21.79px;
    border-radius: 12px;
    overflow: hidden;
    padding: 20px;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    min-height: 50vh;
  }

  .card img {
    width: 70px;
    height: auto;
    object-fit: contain;
  }

  /* Button Styles */

  .carousel-buttons button {
    background: url('{{ 'Group 189.png' | asset_url }}') no-repeat center center;
    background-size: contain;
    border: none;
    cursor: pointer;
    outline: none;
  }

  .carousel-buttons button:disabled {
    opacity: 0.5;
    cursor: not-allowed;
    pointer-events: none;
  }

  /* Card Content Styles */

  .card-content {
    position: absolute;
    bottom: 10px;
    left: 10px;
    background: rgba(255, 255, 255, 0.8);
    padding: 10px;
    padding-left: 9%;
    border-radius: 6px;
    width: calc(100% - 20px);
    text-align: left;
    display: flex;
    align-items: center;
    gap: 15px;
  }

  /* Navigation and Heading Styles */

  .carousel-buttons {
    margin-top: 50px;
    width: 100%;
    display: flex;
    justify-content: center;
    gap: 120px;
  }

  .heading_text {
    text-align: center;
    padding: 10px 8vw;
  }

  .heading_text h4 {
    color: #6F1645;
    font-size: 50px;
  }

  /* Responsive Text Styles */

  .desktop_text {
    display: none;
  }

  @media screen and (min-width: 700px) {
    .mobile_text {
      display: none;
    }
    .desktop_text {
      display: block;
    }

    .cards-container {
      max-width: 70vw;
      margin: 0 auto;
    }
  }
</style>

<div class="heading_text">
  <h4 class="desktop_text">
    What Better Blood Flow <br>
    Can Do For You
  </h4>
  <h4 class="mobile_text">The Health Benefits of 1000 Grapes in Each Serving</h4>
</div>

<!-- Desktop Grid -->
<div class="cards-container">
  {% for block in section.blocks %}
    <div
      class="card"
      style="background-repeat: no-repeat; background-image: url('{{ block.settings.background_image | img_url: 'large' }}');"
    >
      <div class="card-content">
        <img src="{{ block.settings.icon | img_url: 'small' }}" alt="Icon" width="40px" height="100%">
        <p>{{ block.settings.text }}</p>
      </div>
    </div>
  {% endfor %}
</div>

<!-- Mobile Carousel -->
<div class="carousel">
  <div class="carousel-inner">
    {% for block in section.blocks %}
      <div
        class="card"
        style="background-size: cover; background-position: center; background-repeat: no-repeat; background-image: url('{{ block.settings.background_image | img_url: 'large' }}');"
      >
        <div class="card-content">
          <img src="{{ block.settings.icon | img_url: 'small' }}" alt="Icon">
          <p>{{ block.settings.text }}</p>
        </div>
      </div>
    {% endfor %}
  </div>
  <div class="carousel-buttons">
    <button class="prev-btn">
      <svg width="51" height="51" viewBox="0 0 51 51" fill="none" xmlns="http://www.w3.org/2000/svg">
        <ellipse cx="25.5" cy="25.5" rx="25.5" ry="25.5" transform="rotate(-180 25.5 25.5)" fill="#C4A562"/>
        <path d="M11.5 25.866C10.8333 25.4811 10.8333 24.5189 11.5 24.134L31 12.8756C31.6667 12.4907 32.5 12.9719 32.5 13.7417L32.5 36.2583C32.5 37.0281 31.6667 37.5093 31 37.1244L11.5 25.866Z" fill="white"/>
      </svg>
    </button>
    <button class="next-btn">
      <svg width="51" height="51" viewBox="0 0 51 51" fill="none" xmlns="http://www.w3.org/2000/svg">
        <circle cx="25.5" cy="25.5" r="25.5" fill="#C4A562"/>
        <path d="M39.5 25.134C40.1667 25.5189 40.1667 26.4811 39.5 26.866L20 38.1244C19.3333 38.5093 18.5 38.0281 18.5 37.2583L18.5 14.7417C18.5 13.9719 19.3333 13.4907 20 13.8756L39.5 25.134Z" fill="white"/>
      </svg>
    </button>
  </div>
</div>

<script>
        document.addEventListener('DOMContentLoaded', function () {
    if (window.innerWidth <= 768) {
      const carousel = document.querySelector('.carousel-inner');
      const prevBtn = document.querySelector('.prev-btn');
      const nextBtn = document.querySelector('.next-btn');

      // Set up proper scrolling behavior
      carousel.style.overflowX = 'scroll';
      carousel.style.scrollSnapType = 'x mandatory';

      // Configure cards for smooth scrolling
      const cards = carousel.querySelectorAll('.card');
      cards.forEach(card => {
        card.style.scrollSnapAlign = 'start';
      });

      // Function to update button states
      function updateButtonStates() {
        // Check for start of carousel
        const isAtStart = carousel.scrollLeft <= 0;
        prevBtn.disabled = isAtStart;
        prevBtn.style.opacity = isAtStart ? '0.5' : '1';

        // Check for end of carousel (with small threshold for rounding errors)
        const isAtEnd = carousel.scrollLeft >= (carousel.scrollWidth - carousel.clientWidth - 1);
        nextBtn.disabled = isAtEnd;
        nextBtn.style.opacity = isAtEnd ? '0.5' : '1';
      }

      // Initial button state - Disable previous button by default
      prevBtn.disabled = true;
      prevBtn.style.opacity = '0.5';

      // Button navigation
      prevBtn.addEventListener('click', () => {
        const cardWidth = cards[0].offsetWidth;
        carousel.scrollBy({
          left: -cardWidth,
          behavior: 'smooth'
        });
      });

      nextBtn.addEventListener('click', () => {
        const cardWidth = cards[0].offsetWidth;
        carousel.scrollBy({
          left: cardWidth,
          behavior: 'smooth'
        });
      });

      // Touch/swipe handling
      let startX, scrollLeft;
      let isDown = false;

      carousel.addEventListener('touchstart', (e) => {
        isDown = true;
        startX = e.touches[0].pageX - carousel.offsetLeft;
        scrollLeft = carousel.scrollLeft;
      });

      carousel.addEventListener('touchmove', (e) => {
        if (!isDown) return;
        e.preventDefault();
        const x = e.touches[0].pageX - carousel.offsetLeft;
        const walk = (x - startX) * 1.5;
        carousel.scrollLeft = scrollLeft - walk;
      });

      carousel.addEventListener('touchend', () => {
        isDown = false;
        updateButtonStates();
      });

      // Update button states on scroll and resize
      carousel.addEventListener('scroll', updateButtonStates);
      window.addEventListener('resize', updateButtonStates);
    }
  });
</script>
